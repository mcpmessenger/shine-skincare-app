option_settings:
  aws:elasticbeanstalk:container:python:
    WSGIPath: "run.py"
    NumProcesses: 4
    NumThreads: 15
  aws:elasticbeanstalk:application:environment:
    PYTHONPATH: "/var/app/current"
    FLASK_APP: "run.py"
    FLASK_ENV: "production"
    FLASK_DEBUG: "False"
    
    # Python optimization for ML workloads
    PYTHONUNBUFFERED: "1"
    PYTHONDONTWRITEBYTECODE: "1"
    PYTHON_GC_THRESHOLD: "700,10,10"
    OMP_NUM_THREADS: "4"
    MKL_NUM_THREADS: "4"
    OPENBLAS_NUM_THREADS: "4"
    
    # Memory management
    MALLOC_ARENA_MAX: "2"
    MALLOC_MMAP_THRESHOLD_: "131072"
    MALLOC_TRIM_THRESHOLD_: "131072"
    MALLOC_TOP_PAD_: "131072"
    MALLOC_MMAP_MAX_: "65536"

  aws:elasticbeanstalk:environment:proxy:staticfiles:
    /static: static
    /favicon.ico: static/favicon.ico

  # Enhanced logging for ML applications
  aws:elasticbeanstalk:hostmanager:
    LogPublicationControl: true

  # Health check optimization for ML startup times
  aws:elasticbeanstalk:healthreporting:system:
    SystemType: enhanced
    HealthCheckSuccessThreshold: Ok
    HealthCheckURL: /api/health
    EnhancedHealthAuthEnabled: true

  # Application load balancer settings for ML workloads
  aws:elbv2:loadbalancer:
    IdleTimeout: 300
    
  aws:elbv2:listener:80:
    Protocol: HTTP
    Rules: default
    
  # Target group settings optimized for ML processing
  aws:elasticbeanstalk:environment:process:default:
    HealthCheckPath: /api/health
    HealthCheckInterval: 30
    HealthyThresholdCount: 2
    UnhealthyThresholdCount: 5
    HealthCheckTimeout: 10
    DeregistrationDelay: 30
    MatcherHTTPCode: 200
    Port: 80
    Protocol: HTTP
    StickinessEnabled: false