option_settings:
  # Instance configuration optimized for ML workloads
  aws:autoscaling:launchconfiguration:
    InstanceType: c5.2xlarge
    RootVolumeType: gp3
    RootVolumeSize: 100
    RootVolumeIOPS: 3000
    RootVolumeThroughput: 125
    SecurityGroups: default
    
  # Auto scaling configuration for ML applications
  aws:autoscaling:asg:
    MinSize: 1
    MaxSize: 4
    Availability Zones: Any 2
    Cooldown: 360
    
  # Auto scaling triggers optimized for ML workloads
  aws:autoscaling:trigger:
    BreachDuration: 5
    LowerBreachScaleIncrement: -1
    LowerThreshold: 20
    MeasureName: CPUUtilization
    Period: 5
    Statistic: Average
    Unit: Percent
    UpperBreachScaleIncrement: 1
    UpperThreshold: 80
    
  # EC2 instance configuration
  aws:ec2:instances:
    InstanceTypes: c5.2xlarge,c5.4xlarge,c5.xlarge
    EnableSpot: false
    SpotFleetOnDemandBase: 0
    SpotFleetOnDemandPercentage: 100
    
  # VPC configuration (if using VPC)
  aws:ec2:vpc:
    VPCId: 
    Subnets: 
    ELBSubnets: 
    ELBScheme: internet-facing
    AssociatePublicIpAddress: true
    
  # Security group rules for ML application
  aws:autoscaling:launchconfiguration:
    IamInstanceProfile: aws-elasticbeanstalk-ec2-role
    
  # CloudWatch monitoring
  aws:elasticbeanstalk:cloudwatch:logs:
    StreamLogs: true
    DeleteOnTerminate: false
    RetentionInDays: 7
    
  aws:elasticbeanstalk:cloudwatch:logs:health:
    HealthStreamingEnabled: true
    DeleteOnTerminate: false
    RetentionInDays: 7

# Commands to optimize instance for ML workloads
commands:
  01_update_system:
    command: "yum update -y"
    ignoreErrors: true
    
  02_install_htop:
    command: "yum install -y htop"
    ignoreErrors: true
    
  03_set_ulimits:
    command: |
      echo "* soft nofile 65536" >> /etc/security/limits.conf
      echo "* hard nofile 65536" >> /etc/security/limits.conf
      echo "* soft nproc 32768" >> /etc/security/limits.conf
      echo "* hard nproc 32768" >> /etc/security/limits.conf
    ignoreErrors: true

files:
  "/etc/sysctl.d/99-ml-optimization.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      # Memory management optimization for ML workloads
      vm.swappiness=10
      vm.dirty_ratio=15
      vm.dirty_background_ratio=5
      vm.overcommit_memory=1
      vm.max_map_count=262144
      
      # Network optimization
      net.core.somaxconn=65535
      net.core.netdev_max_backlog=5000
      net.ipv4.tcp_max_syn_backlog=8192
      net.ipv4.tcp_slow_start_after_idle=0