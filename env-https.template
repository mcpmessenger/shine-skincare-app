# Shine Skincare App - Environment Variables Template (HTTPS Enabled)
# Copy this file to .env.local and fill in your values
# This template is for use AFTER enabling HTTPS on your ALB

# ===================================
# BACKEND API CONFIGURATION (HTTPS)
# ===================================
# Your deployed backend URL with HTTPS (replace with your actual ALB HTTPS URL)
NEXT_PUBLIC_BACKEND_URL=https://your-alb-dns-name.region.elb.amazonaws.com

# Example formats:
# NEXT_PUBLIC_BACKEND_URL=https://shine-skincare-alb-123456789.us-east-1.elb.amazonaws.com
# NEXT_PUBLIC_BACKEND_URL=https://api.shineskincare.com (if using custom domain)

# For local development, use:
# NEXT_PUBLIC_BACKEND_URL=http://localhost:5000

# ===================================
# AUTHENTICATION (Google OAuth)
# ===================================
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret

# ===================================
# DATABASE (Supabase)
# ===================================
NEXT_PUBLIC_SUPABASE_URL=your-supabase-url
NEXT_PUBLIC_SUPABASE_ANON_KEY=your-supabase-anon-key
SUPABASE_SERVICE_ROLE_KEY=your-supabase-service-role-key

# ===================================
# GOOGLE VISION API
# ===================================
GOOGLE_VISION_API_KEY=your-google-vision-api-key

# ===================================
# PAYMENT (Stripe)
# ===================================
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=your-stripe-publishable-key
STRIPE_SECRET_KEY=your-stripe-secret-key

# ===================================
# DEPLOYMENT
# ===================================
# This will be automatically set by Vercel/Amplify
NEXT_PUBLIC_VERCEL_URL=your-deployment-url

# ===================================
# DEVELOPMENT
# ===================================
NODE_ENV=development

# ===================================
# HTTPS CONFIGURATION NOTES
# ===================================
# After enabling HTTPS on your ALB:
# 1. Update NEXT_PUBLIC_BACKEND_URL to use https:// instead of http://
# 2. Ensure your ALB has a valid SSL certificate
# 3. Test that all endpoints are accessible via HTTPS
# 4. Update any hardcoded HTTP URLs in your codebase
