# =============================================================================
# SHINE SKINCARE APP - ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env and fill in your actual values
# DO NOT commit your actual .env file to version control

# =============================================================================
# FLASK APPLICATION CONFIGURATION
# =============================================================================

# Flask Secret Key (generate a secure random key)
SECRET_KEY=your-super-secret-flask-key-change-this-in-production

# JWT Secret Key (generate a secure random key)
JWT_SECRET_KEY=your-super-secret-jwt-key-change-this-in-production

# Flask Environment
FLASK_ENV=development
FLASK_DEBUG=true

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Database URL (for production)
DATABASE_URL=postgresql://username:password@localhost:5432/shine_db

# SQLite Database URLs (for development/testing)
DEV_DATABASE_URL=sqlite:///shine_dev.db
TEST_DATABASE_URL=sqlite:///shine_test.db

# =============================================================================
# REDIS CONFIGURATION (for caching and background tasks)
# =============================================================================

# Redis URL
REDIS_URL=redis://localhost:6379/0

# Celery Configuration (for background tasks)
CELERY_BROKER_URL=redis://localhost:6379/1
CELERY_RESULT_BACKEND=redis://localhost:6379/1

# =============================================================================
# GOOGLE OAUTH CONFIGURATION
# =============================================================================

# Google OAuth Client ID (from Google Cloud Console)
GOOGLE_CLIENT_ID=your-google-oauth-client-id-here

# Google OAuth Client Secret (from Google Cloud Console)
GOOGLE_CLIENT_SECRET=your-google-oauth-client-secret-here

# Google OAuth Redirect URI (must match what's configured in Google Console)
GOOGLE_REDIRECT_URI=http://localhost:3000/auth/callback

# =============================================================================
# GOOGLE CLOUD VISION AI CONFIGURATION
# =============================================================================

# Google Cloud Project ID
GOOGLE_CLOUD_PROJECT_ID=your-google-cloud-project-id

# Path to Google Cloud Service Account Key JSON file
GOOGLE_APPLICATION_CREDENTIALS=./google-vision-key.json

# =============================================================================
# SUPABASE CONFIGURATION (for database and storage)
# =============================================================================

# Supabase Project URL
SUPABASE_URL=https://your-project-id.supabase.co

# Supabase Service Role Key (for backend operations)
SUPABASE_KEY=your-supabase-service-role-key

# Supabase Anonymous Key (for frontend operations)
SUPABASE_ANON_KEY=your-supabase-anon-key

# =============================================================================
# STRIPE PAYMENT CONFIGURATION
# =============================================================================

# Stripe Secret Key (for backend operations)
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key_here

# Stripe Publishable Key (for frontend operations)
STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key_here

# Stripe Webhook Secret (for webhook verification)
STRIPE_WEBHOOK_SECRET=whsec_your_stripe_webhook_secret_here

# Stripe Price IDs (for subscription tiers)
STRIPE_BASIC_PRICE_ID=price_your_basic_tier_price_id
STRIPE_PREMIUM_PRICE_ID=price_your_premium_tier_price_id
STRIPE_PRO_PRICE_ID=price_your_pro_tier_price_id

# =============================================================================
# FAISS CONFIGURATION (for image similarity search)
# =============================================================================

# FAISS Index File Path
FAISS_INDEX_PATH=faiss_index

# FAISS Vector Dimension
FAISS_DIMENSION=2048

# =============================================================================
# MCP (Model Context Protocol) CONFIGURATION
# =============================================================================

# MCP Server URL
MCP_SERVER_URL=your-mcp-server-url

# MCP API Key
MCP_API_KEY=your-mcp-api-key

# =============================================================================
# EMAIL CONFIGURATION (for notifications)
# =============================================================================

# SMTP Configuration
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-specific-password

# Email From Address
EMAIL_FROM=noreply@shine-skincare.com

# =============================================================================
# FRONTEND CONFIGURATION
# =============================================================================

# Next.js Configuration
NEXT_PUBLIC_API_URL=http://localhost:5000
NEXT_PUBLIC_APP_URL=http://localhost:3000

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# CORS Origins (comma-separated list)
CORS_ORIGINS=http://localhost:3000,http://localhost:3001,https://your-domain.com

# Session Configuration
SESSION_COOKIE_SECURE=false
SESSION_COOKIE_HTTPONLY=true
SESSION_COOKIE_SAMESITE=lax

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log Level
LOG_LEVEL=INFO

# Log File Path
LOG_FILE=logs/shine_app.log

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Enable/Disable Features
ENABLE_GOOGLE_VISION=true
ENABLE_FAISS_SEARCH=true
ENABLE_STRIPE_PAYMENTS=true
ENABLE_EMAIL_NOTIFICATIONS=false
ENABLE_ANALYTICS=false

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

# Development Mode
DEBUG=true
TESTING=false

# Auto-reload on file changes
AUTO_RELOAD=true

# =============================================================================
# PRODUCTION CONFIGURATION (override these in production)
# =============================================================================

# Production Settings (set these in production)
# FLASK_ENV=production
# FLASK_DEBUG=false
# DEBUG=false
# SESSION_COOKIE_SECURE=true
# CORS_ORIGINS=https://your-domain.com
# DATABASE_URL=postgresql://prod_user:prod_password@prod_host:5432/prod_db

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================

# 1. Copy this file to .env:
#    cp env.example .env

# 2. Update the values in .env with your actual credentials

# 3. Required services to set up:
#    - Google Cloud Console (OAuth + Vision AI)
#    - Stripe (for payments)
#    - Supabase (for database and storage)
#    - Redis (for caching and background tasks)

# 4. Generate secure keys:
#    - SECRET_KEY: Use a secure random string
#    - JWT_SECRET_KEY: Use a secure random string
#    - STRIPE_WEBHOOK_SECRET: Get from Stripe dashboard

# 5. Test your configuration:
#    cd backend
#    python setup_google_vision.py
#    python test_api.py

# =============================================================================
# SECURITY NOTES
# =============================================================================

# ⚠️  IMPORTANT SECURITY REMINDERS:
# - Never commit your .env file to version control
# - Use strong, unique passwords for all services
# - Rotate API keys regularly
# - Use environment-specific configurations
# - Enable 2FA on all service accounts
# - Monitor API usage and costs 