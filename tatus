[1mdiff --git a/app/api/v4/face/detect/route.ts b/app/api/v4/face/detect/route.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..8869eab[m
[1m--- /dev/null[m
[1m+++ b/app/api/v4/face/detect/route.ts[m
[36m@@ -0,0 +1,51 @@[m
[32m+[m[32mimport { NextRequest, NextResponse } from 'next/server';[m
[32m+[m
[32m+[m[32mconst BACKEND_URL = process.env.NEXT_PUBLIC_BACKEND_URL || 'http://shine-backend-prod.eba-bfx39wvr.us-east-1.elasticbeanstalk.com';[m
[32m+[m
[32m+[m[32mexport async function POST(request: NextRequest) {[m
[32m+[m[32m  try {[m
[32m+[m[32m    const body = await request.json();[m
[32m+[m[41m    [m
[32m+[m[32m    console.log('üîÑ Face detection proxy - Backend URL:', BACKEND_URL);[m
[32m+[m[32m    console.log('üîÑ Face detection proxy - Request body keys:', Object.keys(body));[m
[32m+[m[41m    [m
[32m+[m[32m    const response = await fetch(`${BACKEND_URL}/api/v4/face/detect`, {[m
[32m+[m[32m      method: 'POST',[m
[32m+[m[32m      headers: {[m
[32m+[m[32m        'Content-Type': 'application/json',[m
[32m+[m[32m      },[m
[32m+[m[32m      body: JSON.stringify(body),[m
[32m+[m[32m    });[m
[32m+[m
[32m+[m[32m    const data = await response.json();[m
[32m+[m[41m    [m
[32m+[m[32m    console.log('‚úÖ Face detection proxy - Backend response status:', response.status);[m
[32m+[m[32m    console.log('‚úÖ Face detection proxy - Backend response:', data);[m
[32m+[m[41m    [m
[32m+[m[32m    return NextResponse.json(data, {[m[41m [m
[32m+[m[32m      status: response.status,[m
[32m+[m[32m      headers: {[m
[32m+[m[32m        'Access-Control-Allow-Origin': '*',[m
[32m+[m[32m        'Access-Control-Allow-Methods': 'POST, OPTIONS',[m
[32m+[m[32m        'Access-Control-Allow-Headers': 'Content-Type',[m
[32m+[m[32m      }[m
[32m+[m[32m    });[m
[32m+[m[32m  } catch (error) {[m
[32m+[m[32m    console.error('Face detection proxy error:', error);[m
[32m+[m[32m    return NextResponse.json([m
[32m+[m[32m      { error: 'Face detection failed', details: error },[m[41m [m
[32m+[m[32m      { status: 500 }[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport async function OPTIONS() {[m
[32m+[m[32m  return NextResponse.json({}, {[m
[32m+[m[32m    status: 200,[m
[32m+[m[32m    headers: {[m
[32m+[m[32m      'Access-Control-Allow-Origin': '*',[m
[32m+[m[32m      'Access-Control-Allow-Methods': 'POST, OPTIONS',[m
[32m+[m[32m      'Access-Control-Allow-Headers': 'Content-Type',[m
[32m+[m[32m    },[m
[32m+[m[32m  });[m
[32m+[m[32m}[m
[1mdiff --git a/app/api/v5/skin/analyze-fixed/route.ts b/app/api/v5/skin/analyze-fixed/route.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..03d8580[m
[1m--- /dev/null[m
[1m+++ b/app/api/v5/skin/analyze-fixed/route.ts[m
[36m@@ -0,0 +1,49 @@[m
[32m+[m[32mimport { NextRequest, NextResponse } from 'next/server';[m
[32m+[m
[32m+[m[32mconst BACKEND_URL = process.env.NEXT_PUBLIC_BACKEND_URL || 'http://shine-backend-prod.eba-bfx39wvr.us-east-1.elasticbeanstalk.com';[m
[32m+[m
[32m+[m[32mexport async function POST(request: NextRequest) {[m
[32m+[m[32m  try {[m
[32m+[m[32m    const body = await request.json();[m
[32m+[m[41m    [m
[32m+[m[32m    console.log('üîÑ Proxying skin analysis request to backend...');[m
[32m+[m[41m    [m
[32m+[m[32m    const response = await fetch(`${BACKEND_URL}/api/v5/skin/analyze-fixed`, {[m
[32m+[m[32m      method: 'POST',[m
[32m+[m[32m      headers: {[m
[32m+[m[32m        'Content-Type': 'application/json',[m
[32m+[m[32m      },[m
[32m+[m[32m      body: JSON.stringify(body),[m
[32m+[m[32m    });[m
[32m+[m
[32m+[m[32m    const data = await response.json();[m
[32m+[m[41m    [m
[32m+[m[32m    console.log('‚úÖ Backend response received:', response.status);[m
[32m+[m[41m    [m
[32m+[m[32m    return NextResponse.json(data, {[m[41m [m
[32m+[m[32m      status: response.status,[m
[32m+[m[32m      headers: {[m
[32m+[m[32m        'Access-Control-Allow-Origin': '*',[m
[32m+[m[32m        'Access-Control-Allow-Methods': 'POST, OPTIONS',[m
[32m+[m[32m        'Access-Control-Allow-Headers': 'Content-Type',[m
[32m+[m[32m      }[m
[32m+[m[32m    });[m
[32m+[m[32m  } catch (error) {[m
[32m+[m[32m    console.error('Skin analysis proxy error:', error);[m
[32m+[m[32m    return NextResponse.json([m
[32m+[m[32m      { error: 'Skin analysis failed', details: error },[m[41m [m
[32m+[m[32m      { status: 500 }[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport async function OPTIONS() {[m
[32m+[m[32m  return NextResponse.json({}, {[m
[32m+[m[32m    status: 200,[m
[32m+[m[32m    headers: {[m
[32m+[m[32m      'Access-Control-Allow-Origin': '*',[m
[32m+[m[32m      'Access-Control-Allow-Methods': 'POST, OPTIONS',[m
[32m+[m[32m      'Access-Control-Allow-Headers': 'Content-Type',[m
[32m+[m[32m    },[m
[32m+[m[32m  });[m
[32m+[m[32m}[m
[1mdiff --git a/app/page.tsx b/app/page.tsx[m
[1mindex 3580390..c006708 100644[m
[1m--- a/app/page.tsx[m
[1m+++ b/app/page.tsx[m
[36m@@ -283,7 +283,7 @@[m [mexport default function HomePage() {[m
   const performFaceDetectionOnImage = async (imageData: string) => {[m
          try {[m
        console.log('Performing face detection on uploaded image...');[m
[31m-       const response = await fetch(getApiUrl(API_CONFIG.ENDPOINTS.FACE_DETECT), {[m
[32m+[m[32m       const response = await fetch('/api/v4/face/detect', {[m
          method: 'POST',[m
          headers: {[m
            'Content-Type': 'application/json',[m
[36m@@ -354,9 +354,9 @@[m [mexport default function HomePage() {[m
     console.log('üîç Starting skin analysis...');[m
 [m
     try {[m
[31m-          // Use the fixed ML model endpoint[m
[32m+[m[32m          // Use the fixed ML model endpoint via proxy[m
     console.log('üì° Calling fixed ML endpoint...');[m
[31m-      const response = await fetch(getApiUrl(API_CONFIG.ENDPOINTS.SKIN_ANALYZE_FIXED), {[m
[32m+[m[32m      const response = await fetch('/api/v5/skin/analyze-fixed', {[m
         method: 'POST',[m
         headers: {[m
           'Content-Type': 'application/json',[m
